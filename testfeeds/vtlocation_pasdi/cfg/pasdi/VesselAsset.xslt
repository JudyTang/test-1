<?xml version="1.0" encoding="UTF-8"?>
<!-- This file was generated by Altova MapForce 2012 YOU SHOULD NOT MODIFY 
	THIS FILE, BECAUSE IT WILL BE OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION. 
	Refer to the Altova MapForce Documentation for further details. http://www.altova.com/mapforce -->
<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:env="http://data.schemas.tfn.thomson.com/Envelope/2008-05-01/"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="env xs">
	<xsl:include href="Common.xslt" />
	<xsl:output method="xml" encoding="UTF-8" indent="yes" />
	<xsl:template match="/ContentItem">
		<xsl:element name="env:ContentItem">
			<xsl:attribute name="action">
				<xsl:value-of select="string(@action)" />
			</xsl:attribute>
			<xsl:for-each select="Data">
				<xsl:element name="env:Data">
					<xsl:attribute name="type">
					<xsl:value-of select="string('VesselAsset')" />
				</xsl:attribute>
					<xsl:for-each select="VesselAsset">
						<xsl:variable name="var_base" select="." />
						<xsl:element name="VesselAsset">
							<xsl:call-template name="el_simple">
								<xsl:with-param name="el" select="$var_base/cne_asset_id" />
								<xsl:with-param name="elName" select="'AssetID'" />
								<xsl:with-param name="attr_objectTypeId"
									select="string($var_base/cne_asset_id/@object_type_id)" />
								<xsl:with-param name="attr_objectType"
									select="string($var_base/cne_asset_id/@object_type)" />
							</xsl:call-template>
							<xsl:call-template name="el_simple">
								<xsl:with-param name="el" select="$var_base/mmsi" />
								<xsl:with-param name="elName" select="'VesselMMSI'" />
							</xsl:call-template>
							<xsl:if
								test="child::flag_id or child::flag_name or child::flag_iso or child::flag_rcs">
								<xsl:element name="VesselFlag">
									<xsl:if test="string($var_base/flag_id) != ''">
										<xsl:element name="VesselFlagID">
											<xsl:call-template name="el_relation_id">
												<xsl:with-param name="el" select="$var_base/flag_id" />
											</xsl:call-template>
										</xsl:element>
									</xsl:if>
									<xsl:call-template name="el_simple">
										<xsl:with-param name="el" select="$var_base/flag_rcs" />
										<xsl:with-param name="elName" select="'VesselFlagRCS'" />
									</xsl:call-template>
									<xsl:call-template name="el_simple">
										<xsl:with-param name="el" select="$var_base/flag_name" />
										<xsl:with-param name="elName" select="'VesselFlag'" />
										<xsl:with-param name="attr_languageId" select="'505062'" />
									</xsl:call-template>
									<xsl:call-template name="el_simple">
										<xsl:with-param name="el" select="$var_base/flag_iso" />
										<xsl:with-param name="elName" select="'VesselFlagISO'" />
									</xsl:call-template>
								</xsl:element>
							</xsl:if>
							<xsl:if test="string(dwt) != ''">
								<VesselDWT>
									<xsl:value-of select="string(round(number(dwt)))" />
								</VesselDWT>
							</xsl:if>
							<xsl:if test="string(loa) != ''">
								<VesselLOA>
									<xsl:value-of select="string(loa)" />
								</VesselLOA>
							</xsl:if>
							<xsl:if test="string(cubic_capacity) != ''">
								<VesselCubicCapacity>
									<xsl:value-of select="string(cubic_capacity)" />
								</VesselCubicCapacity>
							</xsl:if>
							<xsl:if test="string(beam) != ''">
								<VesselBeam>
									<xsl:value-of select="string(beam)" />
								</VesselBeam>
							</xsl:if>
							<xsl:if test="string(draft) != ''">
								<VesselDraft>
									<xsl:value-of select="string(draft)" />
								</VesselDraft>
							</xsl:if>
							<xsl:if test="string(teu) != ''">
								<VesselTEU>
									<xsl:value-of select="string(round(number(teu)))" />
								</VesselTEU>
							</xsl:if>
							<xsl:if test="string(hull_style) != ''">
								<VesselHullType>
									<xsl:attribute name="languageId">505062</xsl:attribute>
									<xsl:value-of select="string(hull_style)" />
								</VesselHullType>
							</xsl:if>
							<xsl:if test="string(bottom_style) != ''">
								<VesselBottomType>
									<xsl:attribute name="languageId">505062</xsl:attribute>
									<xsl:value-of select="string(bottom_style)" />
								</VesselBottomType>
							</xsl:if>
							<xsl:if test="string(side_style) != ''">
								<VesselSideType>
									<xsl:attribute name="languageId">505062</xsl:attribute>
									<xsl:value-of select="string(side_style)" />
								</VesselSideType>
							</xsl:if>
							<xsl:for-each select="VesselOwner">
								<VesselOwner>
									<xsl:for-each select="VesselRegisteredOwnerID">
										<VesselRegisteredOwnerID>
											<xsl:value-of select="string(.)" />
										</VesselRegisteredOwnerID>
									</xsl:for-each>
									<xsl:for-each select="VesselRegisteredOwnerIntID">
										<VesselRegisteredOwnerIntID>
											<xsl:value-of select="string(.)" />
										</VesselRegisteredOwnerIntID>
									</xsl:for-each>
									<xsl:for-each select="VesselRegisteredOwner">
										<VesselRegisteredOwner>
											<xsl:attribute name="languageId">505062</xsl:attribute>
											<xsl:value-of select="string(.)" />
										</VesselRegisteredOwner>
									</xsl:for-each>
									<xsl:for-each select="VesselManagingOwnerID">
										<VesselManagingOwnerID>
											<xsl:value-of select="string(.)" />
										</VesselManagingOwnerID>
									</xsl:for-each>
									<xsl:for-each select="VesselManagingOwnerIntID">
										<VesselManagingOwnerIntID>
											<xsl:value-of select="string(.)" />
										</VesselManagingOwnerIntID>
									</xsl:for-each>
									<xsl:for-each select="VesselManagingOwner">
										<VesselManagingOwner>
											<xsl:attribute name="languageId">505062</xsl:attribute>
											<xsl:value-of select="string(.)" />
										</VesselManagingOwner>
									</xsl:for-each>
								</VesselOwner>
							</xsl:for-each>
							<xsl:if test="string(coated) != ''">
								<VesselCoated>
									<xsl:value-of select="string(coated)" />
								</VesselCoated>
							</xsl:if>
							<xsl:if test="string(is_deactived) != ''">
								<VesselIsDeactivated>
									<xsl:value-of select="string(is_deactived)" />
								</VesselIsDeactivated>
							</xsl:if>
							<xsl:if test="string(product) != ''">
								<VesselProduct>
									<xsl:value-of select="string(product)" />
								</VesselProduct>
							</xsl:if>
							<xsl:if
								test="child::built or child::built_initial or child::built_demolition">
								<VesselBuilt>
									<xsl:if test="string(built) != ''">
										<VesselBuilt>
											<xsl:value-of select="string(built)" />
										</VesselBuilt>
									</xsl:if>
									<xsl:if test="string(built_initial) != ''">
										<VesselBuiltInitial>
											<xsl:value-of select="string(built_initial)" />
										</VesselBuiltInitial>
									</xsl:if>
									<xsl:if test="string(built_demolition) != ''">
										<VesselBuiltDemolition>
											<xsl:value-of select="string(built_demolition)" />
										</VesselBuiltDemolition>
									</xsl:if>
								</VesselBuilt>
							</xsl:if>
							<xsl:if test="string(tpc) != ''">
								<VesselTPC>
									<xsl:value-of select="string(tpc)" />
								</VesselTPC>
							</xsl:if>
							<xsl:for-each select="VesselLocation">
								<VesselLocation>
									<xsl:if test="string(VesselLocationRole) != ''">
										<VesselLocationRole>
											<xsl:attribute name="languageId">505062</xsl:attribute>
											<xsl:value-of select="string(VesselLocationRole)" />
										</VesselLocationRole>
									</xsl:if>
									<xsl:if test="string(callsign) != ''">
										<VesselLocationCallsign>
											<xsl:value-of select="string(callsign)" />
										</VesselLocationCallsign>
									</xsl:if>
									<xsl:if test="string(loc_heading) != ''">
										<VesselLocationHeading>
											<xsl:value-of select="string(loc_heading)" />
										</VesselLocationHeading>
									</xsl:if>
									<xsl:if test="string(loc_speed) != ''">
										<VesselLocationSpeed>
											<xsl:value-of select="string(loc_speed)" />
										</VesselLocationSpeed>
									</xsl:if>
									<xsl:if test="string(loc_draft) != ''">
										<VesselLocationDraft>
											<xsl:value-of select="string(loc_draft)" />
										</VesselLocationDraft>
									</xsl:if>
									<xsl:if test="string(loc_draft_percentage) != ''">
										<VesselLocationDraftPercentage>
											<xsl:value-of select="string(format-number(loc_draft_percentage, '#.##'))" />
										</VesselLocationDraftPercentage>
									</xsl:if>
									<xsl:if test="string(loc_length) != ''">
										<VesselLocationLength>
											<xsl:value-of select="string(loc_length)" />
										</VesselLocationLength>
									</xsl:if>
									<xsl:if test="string(loc_width) != ''">
										<VesselLocationWidth>
											<xsl:value-of select="string(loc_width)" />
										</VesselLocationWidth>
									</xsl:if>
									<xsl:if test="string(loc_eta) != ''">
										<VesselLocationETA>
											<xsl:value-of select="string(loc_eta)" />
										</VesselLocationETA>
									</xsl:if>
									<xsl:if test="string(loc_timestamp) != ''">
										<VesselLocationTimestamp>
											<xsl:value-of select="string(loc_timestamp)" />
										</VesselLocationTimestamp>
									</xsl:if>
									<xsl:for-each select="VesselLocationSource">
										<VesselLocationSource>
											<xsl:if test="string(loc_data_source_code) != ''">
												<VesselLocationSourceCode>
													<xsl:value-of select="string(loc_data_source_code)" />
												</VesselLocationSourceCode>
											</xsl:if>
											<xsl:if test="string(loc_data_source) != ''">
												<VesselLocationSource>
													<xsl:attribute name="languageId">505062</xsl:attribute>
													<xsl:value-of select="string(loc_data_source)" />
												</VesselLocationSource>
											</xsl:if>
											<xsl:if test="string(loc_data_source_type) != ''">
												<VesselLocationSourceType>
													<xsl:attribute name="languageId">505062</xsl:attribute>
													<xsl:value-of select="string(loc_data_source_type)" />
												</VesselLocationSourceType>
											</xsl:if>											
										</VesselLocationSource>
									</xsl:for-each>
									<xsl:for-each select="VesselLocationZone">
										<VesselLocationZone>
											<xsl:if test="string(zone_id) != ''">
												<VLZID>
													<xsl:value-of select="string(zone_id)" />
												</VLZID>
											</xsl:if>
											<xsl:if test="string(zone_perm_id) != ''">
												<VLZAssetID>
													<xsl:call-template name="ves_gun_id">
														<xsl:with-param name="base" select="$var_base" />
														<xsl:with-param name="parentEl" select="." />
													</xsl:call-template>
												</VLZAssetID>
											</xsl:if>
											<xsl:if test="string(zone_code) != ''">
												<VLZRCS>
													<xsl:value-of select="string(zone_code)" />
												</VLZRCS>
											</xsl:if>
											<xsl:choose>
													<xsl:when test="string(zone_name) != ''">
															<VLZName>
																	<xsl:attribute name="languageId">505062</xsl:attribute>
																	<xsl:choose>
																			<xsl:when
																					test="(../VesselLocationRole = 'Destination') and (string(zone_raw_value) != '')">
																					<xsl:value-of select="string(zone_raw_value)" />
																			</xsl:when>
																			<xsl:otherwise>
																					<xsl:value-of select="string(zone_name)" />
																			</xsl:otherwise>
																	</xsl:choose>
															</VLZName>
													</xsl:when>
													<xsl:otherwise>
															<xsl:if test="string(zone_raw_value) != ''">
																	<VLZName>
																			<xsl:attribute name="languageId">505062</xsl:attribute>
																			<xsl:value-of select="string(zone_raw_value)" />
																	</VLZName>
															</xsl:if>
													</xsl:otherwise>
											</xsl:choose>
											<!-- <xsl:if test="string(zone_name) != ''"> <VLZName> <xsl:attribute 
												name="languageId">505062</xsl:attribute> <xsl:choose> <xsl:when test="(../VesselLocationRole 
												= 'Destination') and (string(zone_raw_value) != '')"> <xsl:value-of select="concat(string(zone_raw_value), 
												' [', string(zone_name), ']')" /> </xsl:when> <xsl:otherwise> <xsl:value-of 
												select="string(zone_name)" /> </xsl:otherwise> </xsl:choose> </VLZName> </xsl:if> -->
											<xsl:if test="string(zone_type) != ''">
												<VLZType>
													<xsl:attribute name="languageId">505062</xsl:attribute>
													<xsl:value-of select="string(zone_type)" />
												</VLZType>
											</xsl:if>
											<xsl:if test="string(zone_rank) != ''">
												<VLZRank>
													<xsl:value-of select="string(zone_rank)" />
												</VLZRank>
											</xsl:if>
											<xsl:if test="string(entry_time) != ''">
												<VLZEntryTimestamp>
													<xsl:value-of select="string(entry_time)" />
												</VLZEntryTimestamp>
											</xsl:if>
											<xsl:if test="string(out_time) != ''">
												<VLZOutTimestamp>
													<xsl:value-of select="string(out_time)" />
												</VLZOutTimestamp>
											</xsl:if>
										</VesselLocationZone>
									</xsl:for-each>

									<xsl:for-each select="VesselLocationGun">
										<VesselLocationZone>
											<xsl:if test="string(gun_id) != ''">
												<VLZID>
													<xsl:value-of select="string(gun_id)" />
												</VLZID>
											</xsl:if>
											<xsl:if test="string(gun_perm_id) != ''">
												<VLZAssetID>
													<xsl:call-template name="ves_gun_id">
														<xsl:with-param name="base" select="$var_base" />
														<xsl:with-param name="parentEl" select="." />
													</xsl:call-template>
												</VLZAssetID>
											</xsl:if>
											<xsl:if test="string(rcs_code) != ''">
												<VLZRCS>
													<xsl:value-of select="string(rcs_code)" />
												</VLZRCS>
											</xsl:if>
											<xsl:if test="string(gun_desc) != ''">
												<VLZName>
													<xsl:attribute name="languageId">505062</xsl:attribute>
													<xsl:choose>
														<xsl:when
															test="(../VesselLocationRole = 'Destination') and (string(zone_raw_value) != '')">
															<xsl:value-of
																select="concat(string(zone_raw_value), ' [', string(gun_desc), ']')" />
														</xsl:when>
														<xsl:otherwise>
															<xsl:value-of select="string(gun_desc)" />
														</xsl:otherwise>
													</xsl:choose>
												</VLZName>
											</xsl:if>
											<xsl:if test="string(guc_desc) != ''">
												<VLZType>
													<xsl:attribute name="languageId">505062</xsl:attribute>
													<xsl:value-of select="string(guc_desc)" />
												</VLZType>
											</xsl:if>
											<xsl:if test="string(zone_rank) != ''">
												<VLZRank>
													<xsl:value-of select="string(zone_rank)" />
												</VLZRank>
											</xsl:if>
											<xsl:if test="string(entry_time) != ''">
												<VLZEntryTimestamp>
													<xsl:value-of select="string(entry_time)" />
												</VLZEntryTimestamp>
											</xsl:if>
											<xsl:if test="string(out_time) != ''">
												<VLZOutTimestamp>
													<xsl:value-of select="string(out_time)" />
												</VLZOutTimestamp>
											</xsl:if>
										</VesselLocationZone>
									</xsl:for-each>
								</VesselLocation>
							</xsl:for-each>
						</xsl:element>
					</xsl:for-each>
				</xsl:element>
			</xsl:for-each>
		</xsl:element>
	</xsl:template>
</xsl:stylesheet>
